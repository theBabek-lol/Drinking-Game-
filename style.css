// Inside DOMContentLoaded after defining "weights"
const settingsContainer = document.getElementById("settings-container");

// Render sliders for weights
function renderSettings() {
    settingsContainer.innerHTML = "";
    const total = Object.values(weights).reduce((a, b) => a + b, 0);

    for (let type in weights) {
        const wrapper = document.createElement("div");
        wrapper.className = "weight-setting";

        const label = document.createElement("label");
        label.textContent = type;

        const slider = document.createElement("input");
        slider.type = "range";
        slider.min = 0;
        slider.max = 100;
        slider.value = Math.round((weights[type] / total) * 100);

        const valueDisplay = document.createElement("span");
        valueDisplay.textContent = slider.value + "%";

        slider.oninput = () => {
            adjustWeights(type, parseInt(slider.value));
            renderSettings(); // re-render so all stay normalized
        };

        wrapper.appendChild(label);
        wrapper.appendChild(slider);
        wrapper.appendChild(valueDisplay);
        settingsContainer.appendChild(wrapper);
    }
}

// Normalize so total = 100%
function adjustWeights(changedType, newPercent) {
    const others = Object.keys(weights).filter(t => t !== changedType);
    const oldTotal = Object.values(weights).reduce((a,b) => a+b, 0);
    
    // Convert percentages back to raw values
    const newWeights = {};
    newWeights[changedType] = newPercent;

    let remaining = 100 - newPercent;
    let oldRemaining = others.map(t => weights[t]);
    let oldSum = oldRemaining.reduce((a,b) => a+b,0);

    others.forEach((t, i) => {
        newWeights[t] = Math.round((weights[t] / oldSum) * remaining);
    });

    // Update weights in-place (scale to something usable, e.g., out of 10)
    for (let t in newWeights) {
        weights[t] = Math.max(1, Math.round(newWeights[t] / 10)); 
    }
}

// Render when entering settings
settingsBtn.onclick = () => {
    renderSettings();
    showScreen('settings');
};
